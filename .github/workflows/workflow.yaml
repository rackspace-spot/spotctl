name: Build, Sign & Release CLI

on:
  push:
    tags:
      - '*'    # Trigger on any git tag push, e.g., v1.0.0

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22' # Set your Go version

      - name: Build all platform binaries
        run: |
          name="spotctl"  # Change this to your CLI binary name
          mkdir -p dist
          GOOS=linux   GOARCH=amd64 go build -o dist/${name}-linux-amd64
          GOOS=linux   GOARCH=arm64 go build -o dist/${name}-linux-arm64
          GOOS=darwin  GOARCH=amd64 go build -o dist/${name}-darwin-amd64
          GOOS=darwin  GOARCH=arm64 go build -o dist/${name}-darwin-arm64
          GOOS=windows GOARCH=amd64 go build -o dist/${name}-windows-amd64.exe

      - name: Install cosign
        run: |
          curl -LO https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64
          chmod +x cosign-linux-amd64
          sudo mv cosign-linux-amd64 /usr/local/bin/cosign

      - name: Prepare cosign private key
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
        run: |
          echo "$COSIGN_PRIVATE_KEY" > cosign.key

      - name: Sign all binaries
        run: |
          for bin in dist/*; do
            cosign sign-blob --key cosign.key "$bin"
          done

      - name: Create GitHub Release with signed binaries
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: |
            dist/* dist/*.sig
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}